# Generated by Django 4.2.13 on 2024-08-09 17:29

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_str', models.CharField(max_length=20)),
                ('job_name', models.CharField(blank=True, help_text='Give the job a name (optional).', max_length=200)),
                ('n_res_total', models.IntegerField()),
                ('res_ranges', models.CharField(max_length=200)),
                ('dom_pdbs', models.JSONField()),
                ('embeddings', models.JSONField()),
                ('targetdb', models.CharField(choices=[('afted', 'afted'), ('scope95', 'scope95'), ('scope40', 'scope40'), ('cath40', 'cath40'), ('ecod70', 'ecod70'), ('af21org', 'af21org')], default='afted', help_text="Choose a database to search against. afted is the <a href='https://www.biorxiv.org/content/10.1101/2024.03.18.585509'>TED domains</a> from the AlphaFold database. scope95/scope40/cath40/ecod70 are domains from classifications of the PDB. af21org is domains from the AlphaFold set of 21 model organisms. See <a href='https://github.com/greener-group/progres#available-databases'> here</a> for more info.", max_length=20, verbose_name='Target database')),
                ('chainsaw', models.BooleanField(default=False, help_text="Whether to split the query structure into domains with <a href='https://doi.org/10.1093/bioinformatics/btae296'>Chainsaw</a> and search with each domain separately. Recommended for structures above 200-300 residues. Note that whether or not this option is selected, only the first chain in the file is considered.", verbose_name='Split domains')),
                ('minsimilarity', models.FloatField(default=0.8, help_text='The Progres score above which to return hits. The default of 0.8 indicates the same fold. Must be 0 -> 1.', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Minimum similarity')),
                ('maxhits', models.IntegerField(default=100, help_text='The maximum number of hits per domain to return. Must be 1 -> 1000.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Max number of hits')),
                ('fileformat', models.CharField(choices=[('guess', 'guess'), ('pdb', 'pdb'), ('mmcif', 'mmcif'), ('mmtf', 'mmtf')], default='guess', help_text='By default the format of the uploaded file is guessed from the file extension, but it can be set explicitly here. Supported formats are PDB, mmCIF and MMTF.', max_length=20, verbose_name='File format')),
                ('submission_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
